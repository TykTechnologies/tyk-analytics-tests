name: Internal framework check

on:
  pull_request:
    branches:
      - master
      - test/*
      - release-*
  push:
    branches:
      - master
      - test/*
      - release-*

env:
  GOPRIVATE: github.com/TykTechnologies

jobs:
  test:
    strategy:
      matrix:
        go-version: [1.19.x]
        platform: [ubuntu-latest]
        arch: [amd64]
        node-version: [15.x]
    runs-on: ${{ matrix.platform }}
    
    steps:
    - name: Install Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v2.4.1
      with:
        node-version: ${{ matrix.node-version }}

    - name: Fix private module deps
      env:
        TOKEN: '${{ secrets.ORG_GH_TOKEN }}'
      run: >
        git config --global url."https://${TOKEN}@github.com".insteadOf "https://github.com"
    
    - name: Checkout of Framework
      uses: actions/checkout@v2
      with:
        path: tyk-analytics-tests
        token: ${{ secrets.ORG_GH_TOKEN }}
        submodules: true

    - name: Check if Dashboard branch exists
      id: check_test_branch
      env:
        TOKEN: '${{ secrets.ORG_GH_TOKEN }}'
      run: |
        echo "::set-output name=branch::master"
        if git ls-remote --exit-code --heads https://${TOKEN}@github.com/TykTechnologies/tyk-analytics ${{ github.base_ref	}}; then
          echo "::set-output name=branch::${{ github.base_ref	}}"
        fi
        if git ls-remote --exit-code --heads https://${TOKEN}@github.com/TykTechnologies/tyk-analytics ${{ github.head_ref }}; then
          echo "::set-output name=branch::${{ github.head_ref	}}"
        fi
        if git ls-remote --exit-code --heads https://${TOKEN}@github.com/TykTechnologies/tyk-analytics ${{ github.ref }}; then
          echo "::set-output name=branch::${{ github.ref }}"
        fi
        echo "Branch from dash: ${branch}"
    
    - name: Checkout Dash repository
      uses: actions/checkout@v2
      with:
        repository: TykTechnologies/tyk-analytics
        path: tyk-analytics
        token: ${{ secrets.ORG_GH_TOKEN }}
        submodules: true
        ref: ${{ steps.check_test_branch.outputs.branch	 }}

    - name: Check if GW branch exists
      id: check_GW_branch
      env:
        TOKEN: '${{ secrets.ORG_GH_TOKEN }}'
      run: |
        echo "::set-output name=branch::master"
        if git ls-remote --exit-code --heads https://${TOKEN}@github.com/TykTechnologies/tyk ${{ github.base_ref	}}; then
          echo "::set-output name=branch::${{ github.base_ref	}}"
        fi
        if git ls-remote --exit-code --heads https://${TOKEN}@github.com/TykTechnologies/tyk ${{ github.head_ref }}; then
          echo "::set-output name=branch::${{ github.head_ref	}}"
        fi
        if git ls-remote --exit-code --heads https://${TOKEN}@github.com/TykTechnologies/tyk ${{ github.ref }}; then
          echo "::set-output name=branch::${{ github.ref }}"
        fi
        echo "Branch from dash: ${branch}"
    
    - name: Checkout GW repository
      uses: actions/checkout@v2
      with:
        repository: TykTechnologies/tyk
        path: tyk
        token: ${{ secrets.ORG_GH_TOKEN }}
        submodules: true
        ref: ${{ steps.check_GW_branch.outputs.branch	 }}

    - name: start docker compose
      run: docker-compose -f ci/testing_env.yml up -d
      env:
        TYK_DB_LICENSEKEY: ${{secrets.DASH_LICENSE}}
        DASH_REPO_PATH: /home/runner/work/tyk-analytics-tests/tyk-analytics-tests/tyk-analytics
        GW_REPO_PATH: /home/runner/work/tyk-analytics-tests/tyk-analytics-tests/tyk
        GOPATH: /home/runner/work/tyk-analytics-tests/
        GOPRIVATE: github.com/TykTechnologies
        TOKEN: ${{ secrets.ORG_GH_TOKEN }}
        GO_VERSION: ${{ matrix.go-version }}
      working-directory: tyk-analytics-tests

    - name: Install test dependecies
      run: |
        npm ci
      working-directory: tyk-analytics-tests
    
    - name: Waiting for dashboard
      run: |
        while [[ "$(curl -s -o /dev/null -w ''%{http_code}'' localhost:3000/hello/)" != "200" ]]; do sleep 60 && echo "waiting for dashboard '$(date +"%T")'"; done
      timeout-minutes: 15    
    
    - name: Execute UI tests
      id: test_execution
      run: |
        npm run headless-test
      working-directory: tyk-analytics-tests
    
    - name: Archive UI test report
      if: ${{ always() }}
      uses: actions/upload-artifact@v2
      with:
        name: ui-test-report
        path: ./tyk-analytics-tests/results/report/index.html
    
    - name: Slack notify
      if: ${{ always() }}
      id: slack_notify
      run: |
        export GIT_BRANCH=$(git branch --show-current) 
        npm run notify-slack
      working-directory: tyk-analytics-tests
      env:
        SLACK_WEBHOOK_URL: ${{ secrets.KONRAD_SLACK }}
        WDIO_TEST_ENV: This is a test of change in Test Framework branch - ${{ steps.check_test_branch.outputs.branch	 }} ${{ github.ref }} (commit message -> ${{ github.event.head_commit.message }}${{ github.event.pull_request.title }})
        FRAMEWORK_REPO: ${{ github.repository }}
        EVENT_TRIGGER: ${{ github.event_name }} (${{ github.actor }})
        JOB_RUN_ID: ${{ github.run_id }}
        JOB_NAME: ${{ github.job }}

    - name: Notify if custom notification failed
      if: steps.slack_notify.outcome == 'failure' && failure()
      uses: rtCamp/action-slack-notify@v2
      env:
        SLACK_WEBHOOK: ${{ secrets.KONRAD_SLACK }}
        SLACK_TITLE: "Tests were NOT executed!"
        SLACK_USERNAME: Test automation
        SLACK_FOOTER: "<https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}|execution details>"
        
    - name: Getting dashboard logs on failure
      if: ${{ failure() }}
      run: docker logs tyk-dashboard

    - name: Comment on PR
      if: ${{ always() }} && github.event.issue.pull_request
      uses: mshick/add-pr-comment@v1
      with:
        message: |
          **UI tests result: ${{ steps.test_execution.outcome }}** ${{ env.STATUS }} 
          Branch used: ${{ github.ref }}
          Commit: ${{ github.event.after }} ${{ github.event.commits[0].message }}
          Triggered by: ${{ github.event_name }} (@${{ github.actor }})
          [Execution page](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})
        repo-token: ${{ secrets.ORG_GH_TOKEN }}
        allow-repeats: true
      env:
        STATUS: "${{ steps.test_execution.outcome == 'success' && ':white_check_mark:' || ':no_entry_sign:' }}"
